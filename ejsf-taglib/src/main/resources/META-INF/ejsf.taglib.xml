<?xml version="1.0" encoding="UTF-8"?>
<facelet-taglib xmlns="http://java.sun.com/xml/ns/javaee"
                xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                xsi:schemaLocation="http://java.sun.com/xml/ns/javaee https://java.sun.com/xml/ns/javaee/web-facelettaglibrary_2_0.xsd"
                version="2.0">

    <description>Enterprise JSF tag library.</description>

    <namespace>urn:be:e-contract:ejsf</namespace>

    <composite-library-name>ejsf-composites</composite-library-name>

    <tag>
        <description>Component to view the JBoss EAP log files. This requires proper configuration of ViewLogsResourceHandler and ejsf.viewLogs.REQUIRED_ROLE context-param.</description>
        <tag-name>viewLogs</tag-name>
        <component>
            <component-type>ejsf.viewLogsComponent</component-type>
        </component>
        <attribute>
            <description>The optional inline style.</description>
            <name>style</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>The optional style class.</description>
            <name>styleClass</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Indicates that the log should be opened in a new tab.</description>
            <name>newTab</name>
            <type>java.lang.Boolean</type>
        </attribute>
        <attribute>
            <description>The datetime formatter pattern.</description>
            <name>dateTimePattern</name>
            <type>java.lang.String</type>
        </attribute>
    </tag>

    <tag>
        <description>Include filter for viewLogs.</description>
        <tag-name>viewLogsInclude</tag-name>
        <handler-class>be.e_contract.ejsf.component.viewlogs.ViewLogsIncludeTagHandler</handler-class>
        <attribute>
            <description>The regular expression to filter log file names.</description>
            <name>name</name>
            <required>true</required>
            <type>java.lang.String</type>
        </attribute>
    </tag>

    <tag>
        <description>Exclude filter for viewLogs.</description>
        <tag-name>viewLogsExclude</tag-name>
        <handler-class>be.e_contract.ejsf.component.viewlogs.ViewLogsExcludeTagHandler</handler-class>
        <attribute>
            <description>The regular expression to filter log file names.</description>
            <name>name</name>
            <required>true</required>
            <type>java.lang.String</type>
        </attribute>
    </tag>

    <tag>
        <description>
            Outputs a value as currency.
        </description>
        <tag-name>outputCurrency</tag-name>
        <component>
            <component-type>ejsf.outputCurrency</component-type>
            <renderer-type>ejsf.outputCurrencyRenderer</renderer-type>
        </component>
        <attribute>
            <description>The currency value. We support Integer, Long, Float, and Double.</description>
            <name>value</name>
            <required>true</required>
            <type>java.lang.Object</type>
        </attribute>
        <attribute>
            <description>The PrimeFaces widget client-side variable.</description>
            <name>widgetVar</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Optional currency. Defaults to "EUR".</description>
            <name>currency</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Optional locale as String or Locale.</description>
            <name>locale</name>
            <type>java.lang.Object</type>
        </attribute>
        <attribute>
            <description>The optional inline style.</description>
            <name>style</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>The optional style class.</description>
            <name>styleClass</name>
            <type>java.lang.String</type>
        </attribute>
    </tag>

    <tag>
        <description>
            Outputs a styled i18n boolean value.
        </description>
        <tag-name>outputBoolean</tag-name>
        <component>
            <component-type>ejsf.outputBoolean</component-type>
        </component>
        <attribute>
            <description>The boolean value to output.</description>
            <name>value</name>
            <required>true</required>
            <type>java.lang.Boolean</type>
        </attribute>
        <attribute>
            <description>Reverses the color indication when set to true.</description>
            <name>reverse</name>
            <type>java.lang.Boolean</type>
        </attribute>
    </tag>

    <tag>
        <description>
            Validator for email addresses.
        </description>
        <tag-name>emailValidator</tag-name>
        <validator>
            <validator-id>ejsf.emailValidator</validator-id>
        </validator>
        <attribute>
            <description>Allows for multiple comma separated email addresses. Defaults to false.</description>
            <name>allowMultiple</name>
            <type>java.lang.Boolean</type>
        </attribute>
        <attribute>
            <description>The optional validation error message.</description>
            <name>message</name>
            <type>java.lang.String</type>
        </attribute>
    </tag>

    <tag>
        <description>
            Validator for URLs.
        </description>
        <tag-name>urlValidator</tag-name>
        <validator>
            <validator-id>ejsf.urlValidator</validator-id>
        </validator>
        <attribute>
            <description>Allow localhost URLs.</description>
            <name>allowLocalhost</name>
            <type>java.lang.Boolean</type>
        </attribute>
        <attribute>
            <description>Also allow for HTTP next to HTTPS. Defaults to false.</description>
            <name>allowHttp</name>
            <type>java.lang.Boolean</type>
        </attribute>
        <attribute>
            <description>The optional validation error message.</description>
            <name>message</name>
            <type>java.lang.String</type>
        </attribute>
    </tag>

    <tag>
        <description>
            Outputs the HTML generated by the PrimeFaces TextEditor component.
        </description>
        <tag-name>outputTextEditorHtml</tag-name>
        <component>
            <component-type>ejsf.outputTextEditorHtml</component-type>
        </component>
        <attribute>
            <description>The PrimeFaces TextEditor text value to display.</description>
            <name>value</name>
            <required>true</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>The optional inline style.</description>
            <name>style</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>The optional style class.</description>
            <name>styleClass</name>
            <type>java.lang.String</type>
        </attribute>
    </tag>

    <tag>
        <description>
            Output formatted bytes (KB, MB, GB).
        </description>
        <tag-name>outputBytes</tag-name>
        <component>
            <component-type>ejsf.outputBytes</component-type>
        </component>
        <attribute>
            <description>The bytes number to output.</description>
            <name>value</name>
            <required>true</required>
            <type>java.lang.Long</type>
        </attribute>
        <attribute>
            <description>The optional inline style.</description>
            <name>style</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>The optional style class.</description>
            <name>styleClass</name>
            <type>java.lang.String</type>
        </attribute>
    </tag>

    <tag>
        <description>
            Outputs the language in the language of the language.
        </description>
        <tag-name>outputLanguage</tag-name>
        <component>
            <component-type>ejsf.outputLanguage</component-type>
        </component>
        <attribute>
            <description>The language to output. For example: en</description>
            <name>value</name>
            <required>true</required>
            <type>java.lang.String</type>
        </attribute>
    </tag>

    <tag>
        <description>
            Validator for phone numbers.
        </description>
        <tag-name>phoneNumberValidator</tag-name>
        <validator>
            <validator-id>ejsf.phoneNumberValidator</validator-id>
        </validator>
        <attribute>
            <description>The default region. For example: BE.</description>
            <name>defaultRegion</name>
            <required>true</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>The type of phone number. Possible values: FIXED_LINE, MOBILE, FIXED_LINE_OR_MOBILE, TOLL_FREE, PREMIUM_RATE, SHARED_COST, VOIP, PERSONAL_NUMBER, PAGER, UAN, VOICEMAIL, UNKNOWN</description>
            <name>phoneNumberType</name>
            <required>true</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>The optional validation error message.</description>
            <name>message</name>
            <type>java.lang.String</type>
        </attribute>
    </tag>

    <tag>
        <description>
            Outputs i18n month.
        </description>
        <tag-name>outputMonth</tag-name>
        <component>
            <component-type>ejsf.outputMonth</component-type>
        </component>
        <attribute>
            <description>The month, ranging 1 to 12.</description>
            <name>value</name>
            <required>true</required>
            <type>java.lang.Integer</type>
        </attribute>
        <attribute>
            <description>Set to true to omit the month number.</description>
            <name>omitMonthNumber</name>
            <type>java.lang.Boolean</type>
        </attribute>
    </tag>

    <tag>
        <description>
            Validator for OTP input.
        </description>
        <tag-name>otpValidator</tag-name>
        <validator>
            <validator-id>ejsf.otpValidator</validator-id>
        </validator>
        <attribute>
            <description>The optional validation error message.</description>
            <name>message</name>
            <type>java.lang.String</type>
        </attribute>
    </tag>

    <tag>
        <description>
            Inline translation.
        </description>
        <tag-name>inlineTranslation</tag-name>
        <component>
            <component-type>ejsf.inlineTranslation</component-type>
        </component>
    </tag>

    <tag>
        <description>
            Translation. Child of inlineTranslation.
        </description>
        <tag-name>translation</tag-name>
        <component>
            <component-type>ejsf.translation</component-type>
        </component>
        <attribute>
            <description>The language of this specific translation. For example: nl.</description>
            <name>language</name>
            <required>true</required>
            <type>java.lang.String</type>
        </attribute>
    </tag>

    <tag>
        <description>Client-side behavior to close PrimeFaces dialogs.</description>
        <tag-name>closeDialog</tag-name>
        <behavior>
            <behavior-id>ejsf.closeDialog</behavior-id>
            <handler-class>be.e_contract.ejsf.behavior.closedialog.CloseDialogTagHandler</handler-class>
        </behavior>
        <attribute>
            <description>Optional condition where a certain callback parameter has to be present.</description>
            <name>whenCallbackParam</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Optional condition where a certain callback parameter has to have a certain value.</description>
            <name>whenCallbackParamValue</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Optional condition on the input validation.</description>
            <name>whenValid</name>
            <type>java.lang.Boolean</type>
        </attribute>
        <attribute>
            <description>Comma separated list of the dialog widget identifiers to close.</description>
            <name>target</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Set to true to avoid an ajax call upon closing the dialog.</description>
            <name>noAjax</name>
            <type>java.lang.Boolean</type>
        </attribute>
    </tag>

    <tag>
        <description>
            Plain text validator.
        </description>
        <tag-name>plainTextValidator</tag-name>
        <validator>
            <validator-id>ejsf.plainTextValidator</validator-id>
        </validator>
        <attribute>
            <description>The optional validation error message.</description>
            <name>message</name>
            <type>java.lang.String</type>
        </attribute>
    </tag>

    <tag>
        <description>
            Outputs the localized version of the day of week (full stand-alone text)
        </description>
        <tag-name>outputDayOfWeek</tag-name>
        <component>
            <component-type>ejsf.outputDayOfWeek</component-type>
        </component>
        <attribute>
            <description>The day of the week to output.</description>
            <name>value</name>
            <required>true</required>
            <type>java.time.DayOfWeek</type>
        </attribute>
        <attribute>
            <description>Style class of the main container element.</description>
            <name>styleClass</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>The optional inline style.</description>
            <name>style</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>The optional message to output in case of null value.</description>
            <name>emptyMessage</name>
            <type>java.lang.String</type>
        </attribute>
    </tag>

    <tag>
        <description>Tracking component using Matomo.</description>
        <tag-name>matomoTracking</tag-name>
        <component>
            <component-type>ejsf.matomoTrackingComponent</component-type>
            <renderer-type>ejsf.matomoTrackingRenderer</renderer-type>
        </component>
        <attribute>
            <description>Set to true to enable page visits tracking.</description>
            <name>enableTracking</name>
            <required>true</required>
            <type>java.lang.Boolean</type>
        </attribute>
        <attribute>
            <description>The URL of the used Matomo instance.</description>
            <name>matomoUrl</name>
            <required>true</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>The Matomo site identifier.</description>
            <name>siteId</name>
            <required>true</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>The optional user identifier.</description>
            <name>userId</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>The optional document title.</description>
            <name>documentTitle</name>
            <type>java.lang.String</type>
        </attribute>
    </tag>

    <tag>
        <description>
            Output Text with PrimeFaces widgetVar support.
        </description>
        <tag-name>outputText</tag-name>
        <component>
            <component-type>ejsf.outputText</component-type>
            <renderer-type>ejsf.outputTextRenderer</renderer-type>
        </component>
        <attribute>
            <description>The text value to output.</description>
            <name>value</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>The PrimeFaces widget client-side variable.</description>
            <name>widgetVar</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>The optional unit.</description>
            <name>unit</name>
            <type>java.lang.String</type>
        </attribute>
    </tag>

    <tag>
        <description>Client-side dictionary component. Useful to provide i18n support from within Javascripts.</description>
        <tag-name>dictionary</tag-name>
        <component>
            <component-type>ejsf.dictionaryComponent</component-type>
            <renderer-type>ejsf.dictionaryRenderer</renderer-type>
        </component>
        <attribute>
            <description>The PrimeFaces widget client-side variable.</description>
            <name>widgetVar</name>
            <required>true</required>
            <type>java.lang.String</type>
        </attribute>
    </tag>

    <tag>
        <description>An entry for the dictionary.</description>
        <tag-name>dictionaryEntry</tag-name>
        <handler-class>be.e_contract.ejsf.component.dictionary.DictionaryEntryTagHandler</handler-class>
        <attribute>
            <description>The key of this dictionary entry.</description>
            <name>key</name>
            <required>true</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>The value of this dictionary entry.</description>
            <name>value</name>
            <required>true</required>
            <type>java.lang.String</type>
        </attribute>
    </tag>

    <tag>
        <description>
            Clock synchronization component. Requires proper configuration of the ClockSyncServlet within web.xml.
        </description>
        <tag-name>clockSync</tag-name>
        <component>
            <component-type>ejsf.clockSync</component-type>
            <renderer-type>ejsf.clockSyncRenderer</renderer-type>
        </component>
        <attribute>
            <description>The location of the ClockSyncServlet.</description>
            <name>clockLocation</name>
            <required>true</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>The PrimeFaces widget client-side variable.</description>
            <name>widgetVar</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Number of attempts to synchronize the clock.</description>
            <name>syncCount</name>
            <type>java.lang.Integer</type>
        </attribute>
        <attribute>
            <description>The accepted round trip delay in milliseconds for synchronization. Defaults to 1000.</description>
            <name>acceptedRoundTripDelay</name>
            <type>java.lang.Integer</type>
        </attribute>
        <attribute>
            <description>The maximum clock drift in milliseconds to consider us out-of-sync. Defaults to 1000.</description>
            <name>maximumClockDrift</name>
            <type>java.lang.Integer</type>
        </attribute>
        <attribute>
            <description>Set to true to periodically generate an HTTP session keep alive ping.</description>
            <name>sessionKeepAlivePing</name>
            <type>java.lang.Boolean</type>
        </attribute>
        <attribute>
            <description>The number of seconds before session expiry that we should ping the server-side. Defaults to 30.</description>
            <name>sessionKeepAliveBeforeExpiryPeriod</name>
            <type>java.lang.Integer</type>
        </attribute>
        <attribute>
            <description>The maximum period to keep the session alive in minutes. Indefinitely if not defined.</description>
            <name>maxKeepAlivePeriod</name>
            <type>java.lang.Integer</type>
        </attribute>
    </tag>

    <tag>
        <description>
            Validator for XML input.
        </description>
        <tag-name>xmlValidator</tag-name>
        <validator>
            <validator-id>ejsf.xmlValidator</validator-id>
        </validator>
        <attribute>
            <description>The optional validation error message.</description>
            <name>message</name>
            <type>java.lang.String</type>
        </attribute>
    </tag>

    <tag>
        <description>Component to provide geolocation.</description>
        <tag-name>geolocation</tag-name>
        <component>
            <component-type>ejsf.geolocationComponent</component-type>
            <renderer-type>ejsf.geolocationRenderer</renderer-type>
        </component>
        <attribute>
            <description>The PrimeFaces widget client-side variable.</description>
            <name>widgetVar</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>The maximum age in milliseconds of a possible cached position.</description>
            <name>maximumAge</name>
            <type>java.lang.Long</type>
        </attribute>
        <attribute>
            <description>The maximum length of time (in milliseconds) the device is allowed to take in order to return a position.</description>
            <name>timeout</name>
            <type>java.lang.Long</type>
        </attribute>
        <attribute>
            <description>Set to true to enable high accuracy.</description>
            <name>enableHighAccuracy</name>
            <type>java.lang.Boolean</type>
        </attribute>
        <attribute>
            <description>Automatically start the geolocation.</description>
            <name>autoStart</name>
            <type>java.lang.Boolean</type>
        </attribute>
    </tag>

    <tag>
        <description>Component for Apache ECharts.</description>
        <tag-name>echarts</tag-name>
        <component>
            <component-type>ejsf.echartsComponent</component-type>
            <renderer-type>ejsf.echartsRenderer</renderer-type>
        </component>
        <attribute>
            <description>The ECharts option JSON structure.</description>
            <name>value</name>
            <required>true</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>The optional width of the chart. Defaults to 600.</description>
            <name>width</name>
            <type>java.lang.Integer</type>
        </attribute>
        <attribute>
            <description>The optional height of the chart. Defaults to 400.</description>
            <name>height</name>
            <type>java.lang.Integer</type>
        </attribute>
        <attribute>
            <description>The PrimeFaces widget client-side variable.</description>
            <name>widgetVar</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>The optional inline style.</description>
            <name>style</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>The optional style class.</description>
            <name>styleClass</name>
            <type>java.lang.String</type>
        </attribute>
    </tag>

    <tag>
        <description>
            Outputs a styled enum via embedded enum tags.
        </description>
        <tag-name>outputEnum</tag-name>
        <component>
            <component-type>ejsf.outputEnum</component-type>
        </component>
        <attribute>
            <description>The enumeration value to output.</description>
            <name>value</name>
            <required>true</required>
            <type>java.lang.Enum</type>
        </attribute>
        <attribute>
            <description>Optional enum name in case of null value.</description>
            <name>handleNullAs</name>
            <type>java.lang.String</type>
        </attribute>
    </tag>

    <tag>
        <description>An enum style. Child of outputEnum.</description>
        <tag-name>enum</tag-name>
        <handler-class>be.e_contract.ejsf.component.output.enums.EnumTagHandler</handler-class>
        <attribute>
            <description>The name of the enum value.</description>
            <name>name</name>
            <required>true</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>The optional human readable enum label.</description>
            <name>label</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>The optional color for the enum.</description>
            <name>color</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>The optional background color for the enum.</description>
            <name>background</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>The optional PrimeFaces icon for the enum.</description>
            <name>icon</name>
            <type>java.lang.String</type>
        </attribute>
    </tag>

    <tag>
        <description>
            Limits the rate at which this field can be processed.
        </description>
        <tag-name>rateLimiter</tag-name>
        <validator>
            <validator-id>ejsf.rateLimiterValidator</validator-id>
            <handler-class>be.e_contract.ejsf.validator.ratelimiter.RateLimiterValidatorTagHandler</handler-class>
        </validator>
        <attribute>
            <description>Indicates the component of which the value is used as base to keep track of tries. Can also be a direct value expression.</description>
            <name>for</name>
            <required>true</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>The optional timeout in seconds when the limit has been reached. Default is 30 seconds.</description>
            <name>timeoutDuration</name>
            <type>java.lang.Integer</type>
        </attribute>
        <attribute>
            <description>The optional limit refresh period in seconds over which we keep track of tries. Default is 10 seconds.</description>
            <name>limitRefreshPeriod</name>
            <type>java.lang.Integer</type>
        </attribute>
        <attribute>
            <description>The optional limit for the refresh period. Default is 5 tries.</description>
            <name>limitForPeriod</name>
            <type>java.lang.Integer</type>
        </attribute>
        <attribute>
            <description>The optional validation error message.</description>
            <name>message</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>The optional method expression to be invoked when the limit has been reached. The parameter is the identifier used to keep track of the number of tries.</description>
            <name>onLimit</name>
            <method-signature>
                java.lang.Object onLimit(java.lang.String)
            </method-signature>
        </attribute>
    </tag>

    <tag>
        <description>
            Validator for strong passwords.
        </description>
        <tag-name>passwordValidator</tag-name>
        <validator>
            <validator-id>ejsf.passwordValidator</validator-id>
        </validator>
    </tag>

    <tag>
        <description>
            Age validator.
        </description>
        <tag-name>ageValidator</tag-name>
        <validator>
            <validator-id>ejsf.ageValidator</validator-id>
        </validator>
        <attribute>
            <description>The minimum age required to pass validation.</description>
            <name>minimumAge</name>
            <required>true</required>
            <type>java.lang.Integer</type>
        </attribute>
        <attribute>
            <description>The optional validation error message.</description>
            <name>message</name>
            <type>java.lang.String</type>
        </attribute>
    </tag>

    <tag>
        <description>Component for D3.</description>
        <tag-name>d3</tag-name>
        <component>
            <component-type>ejsf.d3Component</component-type>
            <renderer-type>ejsf.d3Renderer</renderer-type>
        </component>
        <attribute>
            <description>The optional width of the chart. Defaults to 600.</description>
            <name>width</name>
            <type>java.lang.Integer</type>
        </attribute>
        <attribute>
            <description>The optional height of the chart. Defaults to 400.</description>
            <name>height</name>
            <type>java.lang.Integer</type>
        </attribute>
        <attribute>
            <description>The PrimeFaces widget client-side variable.</description>
            <name>widgetVar</name>
            <required>true</required>
            <type>java.lang.String</type>
        </attribute>
    </tag>

    <tag>
        <description>
            Output clickable email.
        </description>
        <tag-name>outputEmail</tag-name>
        <component>
            <component-type>ejsf.outputEmail</component-type>
        </component>
        <attribute>
            <description>The email address.</description>
            <name>value</name>
            <required>true</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>The optional email subject.</description>
            <name>subject</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>The optional email cc</description>
            <name>cc</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>The optional email bcc</description>
            <name>bcc</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>The optional email body</description>
            <name>body</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>The optional inline style.</description>
            <name>style</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>The optional style class.</description>
            <name>styleClass</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>The optional label.</description>
            <name>label</name>
            <type>java.lang.String</type>
        </attribute>
    </tag>

    <function>
        <function-name>getRateLimiterSessionIdentifier</function-name>
        <function-class>be.e_contract.ejsf.validator.ratelimiter.RateLimiterFunctions</function-class>
        <function-signature>java.lang.String getRateLimiterSessionIdentifier(java.lang.String)</function-signature>
    </function>

    <tag>
        <description>
            User RBAC validator.
        </description>
        <tag-name>requiresRole</tag-name>
        <validator>
            <validator-id>ejsf.requiresRoleValidator</validator-id>
        </validator>
        <attribute>
            <description>The required RBAC role.</description>
            <name>role</name>
            <required>true</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>The optional validation error message.</description>
            <name>message</name>
            <type>java.lang.String</type>
        </attribute>
    </tag>

    <tag>
        <description>Client behavior to copy a value to the clipboard.</description>
        <tag-name>copyToClipboard</tag-name>
        <behavior>
            <behavior-id>ejsf.copyToClipboardClientBehavior</behavior-id>
            <handler-class>be.e_contract.ejsf.behavior.clipboard.CopyToClipboardTagHandler</handler-class>
        </behavior>
        <attribute>
            <description>The value to be copied to the clipboard.</description>
            <name>value</name>
            <required>true</required>
            <type>java.lang.String</type>
        </attribute>
    </tag>

    <tag>
        <description>
            Output clickable url.
        </description>
        <tag-name>outputUrl</tag-name>
        <component>
            <component-type>ejsf.outputUrl</component-type>
        </component>
        <attribute>
            <description>The url address.</description>
            <name>value</name>
            <required>true</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>The optional inline style.</description>
            <name>style</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>The optional style class.</description>
            <name>styleClass</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>The optional label.</description>
            <name>label</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Indicates that the URL should be opened in a new tab.</description>
            <name>newTab</name>
            <type>java.lang.Boolean</type>
        </attribute>
    </tag>

    <tag>
        <description>
            Highlights source code.
        </description>
        <tag-name>highlight</tag-name>
        <component>
            <component-type>ejsf.highlightComponent</component-type>
            <renderer-type>ejsf.highlightRenderer</renderer-type>
        </component>
        <attribute>
            <description>The optional source code as value.</description>
            <name>value</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>The optional element identifier within the XHTML file.</description>
            <name>for</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>The optional source code resource.</description>
            <name>resource</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>The optional source code language.</description>
            <name>language</name>
            <type>java.lang.String</type>
        </attribute>
    </tag>

    <tag>
        <description>Client-side behavior to open PrimeFaces dialogs.</description>
        <tag-name>openDialog</tag-name>
        <behavior>
            <behavior-id>ejsf.openDialog</behavior-id>
            <handler-class>be.e_contract.ejsf.behavior.opendialog.OpenDialogTagHandler</handler-class>
        </behavior>
        <attribute>
            <description>The dialog widget var.</description>
            <name>dialog</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>The dialog id.</description>
            <name>dialogId</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Optional condition where a certain callback parameter has to be present.</description>
            <name>whenCallbackParam</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Optional condition where a certain callback parameter has to have a certain value.</description>
            <name>whenCallbackParamValue</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Client side callback to execute when ajax request is completed.</description>
            <name>oncomplete</name>
            <type>java.lang.String</type>
        </attribute>
    </tag>

    <tag>
        <description>
            Outputs the fingerprint of binary data.
        </description>
        <tag-name>outputFingerprint</tag-name>
        <component>
            <component-type>ejsf.outputFingerprint</component-type>
        </component>
        <attribute>
            <description>The data as byte array.</description>
            <name>value</name>
            <required>true</required>
            <type>java.lang.Object</type>
        </attribute>
        <attribute>
            <description>The optional digest algorithm. Defaults to SHA-1.</description>
            <name>algo</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>The optional spacing between each byte hex value.</description>
            <name>spacing</name>
            <type>java.lang.Boolean</type>
        </attribute>
        <attribute>
            <description>The optional separator. Defaults to a white space.</description>
            <name>separator</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Set to true to output the fingerprint in lowercase. Defaults to false, hence uppercase.</description>
            <name>lowercase</name>
            <type>java.lang.Boolean</type>
        </attribute>
    </tag>

    <tag>
        <description>Adds a Matomo custom dimension to the Matomo tracking.</description>
        <tag-name>matomoCustomDimension</tag-name>
        <handler-class>be.e_contract.ejsf.component.matomo.CustomDimensionTagHandler</handler-class>
        <attribute>
            <description>The dimension.</description>
            <name>dimension</name>
            <required>true</required>
            <type>java.lang.Integer</type>
        </attribute>
        <attribute>
            <description>The value of this dimension.</description>
            <name>value</name>
            <required>true</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Indicates whether this custom dimension is enabled or not.</description>
            <name>enabled</name>
            <type>java.lang.Boolean</type>
        </attribute>
    </tag>

    <tag>
        <description>Component for VIS Network.</description>
        <tag-name>visNetwork</tag-name>
        <component>
            <component-type>ejsf.visNetworkComponent</component-type>
            <renderer-type>ejsf.visNetworkRenderer</renderer-type>
        </component>
        <attribute>
            <description>The VIS Network data JSON structure.</description>
            <name>value</name>
            <required>true</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>The optional width of the network. Defaults to 600. Ignored if style or styleClass is set.</description>
            <name>width</name>
            <type>java.lang.Integer</type>
        </attribute>
        <attribute>
            <description>The optional height of the network. Defaults to 400. Ignored if style or styleClass is set.</description>
            <name>height</name>
            <type>java.lang.Integer</type>
        </attribute>
        <attribute>
            <description>The PrimeFaces widget client-side variable.</description>
            <name>widgetVar</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>The optional inline style.</description>
            <name>style</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>The optional style class.</description>
            <name>styleClass</name>
            <type>java.lang.String</type>
        </attribute>
    </tag>

    <tag>
        <description>
            Internet address validator.
        </description>
        <tag-name>inetAddressValidator</tag-name>
        <validator>
            <validator-id>ejsf.inetAddressValidator</validator-id>
        </validator>
        <attribute>
            <description>Set to true to only allow IPv4 addresses.</description>
            <name>ipv4Only</name>
            <type>java.lang.Boolean</type>
        </attribute>
        <attribute>
            <description>The optional validation error message.</description>
            <name>message</name>
            <type>java.lang.String</type>
        </attribute>
    </tag>

    <tag>
        <description>Logs all client behavior events on a component via console.log.</description>
        <tag-name>clientBehaviorLogger</tag-name>
        <behavior>
            <behavior-id>ejsf.clientBehaviorLogger</behavior-id>
            <handler-class>be.e_contract.ejsf.behavior.logger.LoggerClientBehaviorTagHandler</handler-class>
        </behavior>
        <attribute>
            <description>Client side callback to execute in case an event is fired.</description>
            <name>onevent</name>
            <type>java.lang.String</type>
        </attribute>
    </tag>

    <tag>
        <description>
            PIN validator.
        </description>
        <tag-name>pinValidator</tag-name>
        <validator>
            <validator-id>ejsf.pinValidator</validator-id>
        </validator>
        <attribute>
            <description>The optional minimum number of digits. Defaults to 4.</description>
            <name>minimumDigits</name>
            <type>java.lang.Integer</type>
        </attribute>
        <attribute>
            <description>The optional maximum number of digits.</description>
            <name>maximumDigits</name>
            <type>java.lang.Integer</type>
        </attribute>
        <attribute>
            <description>The optional validation error message.</description>
            <name>message</name>
            <type>java.lang.String</type>
        </attribute>
    </tag>

    <tag>
        <description>
            Home File validator.
        </description>
        <tag-name>homeFileValidator</tag-name>
        <validator>
            <validator-id>ejsf.homeFileValidator</validator-id>
        </validator>
        <attribute>
            <description>The optional directory restriction under the home directory.</description>
            <name>directory</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>The optional file type. Can be FILE or DIRECTORY. Defaults to FILE.</description>
            <name>type</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>The optional validation error message.</description>
            <name>message</name>
            <type>java.lang.String</type>
        </attribute>
    </tag>

    <tag>
        <description>
            KeyStore Password validator.
        </description>
        <tag-name>keyStorePasswordValidator</tag-name>
        <validator>
            <validator-id>ejsf.keyStorePasswordValidator</validator-id>
            <handler-class>be.e_contract.ejsf.validator.keystore.KeyStorePasswordValidatorTagHandler</handler-class>
        </validator>
        <attribute>
            <description>The type of the key store. JKS or PKCS12.</description>
            <name>keyStoreType</name>
            <required>true</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>The id of the UIInput holding the keystore path.</description>
            <name>forKeyStore</name>
            <required>true</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>The optional validation error message.</description>
            <name>message</name>
            <type>java.lang.String</type>
        </attribute>
    </tag>

    <tag>
        <description>
            OID validator.
        </description>
        <tag-name>oidValidator</tag-name>
        <validator>
            <validator-id>ejsf.oidValidator</validator-id>
        </validator>
        <attribute>
            <description>The optional validation error message.</description>
            <name>message</name>
            <type>java.lang.String</type>
        </attribute>
    </tag>

    <tag>
        <description>
            Cron validator.
        </description>
        <tag-name>cronValidator</tag-name>
        <validator>
            <validator-id>ejsf.cronValidator</validator-id>
        </validator>
        <attribute>
            <description>The type of cron expression. Accepted values: CRON4J, QUARTZ, UNIX, SPRING, SPRING53</description>
            <name>cronType</name>
            <required>true</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>The optional validation error message.</description>
            <name>message</name>
            <type>java.lang.String</type>
        </attribute>
    </tag>

    <tag>
        <description>
            Provides some useful monkey patches for PrimeFaces.
        </description>
        <tag-name>monkeyPatch</tag-name>
        <component>
            <component-type>ejsf.monkeyPatchComponent</component-type>
        </component>
    </tag>

    <tag>
        <description>Tests a component.</description>
        <tag-name>testComponent</tag-name>
        <component>
            <component-type>ejsf.testComponentComponent</component-type>
            <renderer-type>ejsf.testComponentRenderer</renderer-type>
        </component>
        <attribute>
            <description>The JSF library.</description>
            <name>library</name>
            <required>true</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>The component tag.</description>
            <name>tag</name>
            <required>true</required>
            <type>java.lang.String</type>
        </attribute>
    </tag>

    <tag>
        <description>Console component.</description>
        <tag-name>console</tag-name>
        <component>
            <component-type>ejsf.consoleComponent</component-type>
            <renderer-type>ejsf.consoleRenderer</renderer-type>
        </component>
        <attribute>
            <description>The PrimeFaces widget client-side variable.</description>
            <name>widgetVar</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>The optional inline style.</description>
            <name>style</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>The optional style class.</description>
            <name>styleClass</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Indicates whether timestamps should be included. Defaults to false.</description>
            <name>timestamp</name>
            <type>java.lang.Boolean</type>
        </attribute>
    </tag>

    <tag>
        <description>Automatically submit upon a condition.</description>
        <tag-name>autoSubmit</tag-name>
        <behavior>
            <behavior-id>ejsf.autoSubmitClientBehavior</behavior-id>
            <handler-class>be.e_contract.ejsf.behavior.autosubmit.AutoSubmitTagHandler</handler-class>
        </behavior>
        <attribute>
            <description>Automatically submit when length of input has been reached.</description>
            <name>whenLength</name>
            <required>true</required>
            <type>java.lang.Integer</type>
        </attribute>
        <attribute>
            <description>Identifier of the default command component. If not provided, we submit the form.</description>
            <name>target</name>
            <type>java.lang.String</type>
        </attribute>
    </tag>

    <tag>
        <description>Countdown component.</description>
        <tag-name>countdown</tag-name>
        <component>
            <component-type>ejsf.countdownComponent</component-type>
            <renderer-type>ejsf.countdownRenderer</renderer-type>
        </component>
        <attribute>
            <description>The PrimeFaces widget client-side variable.</description>
            <name>widgetVar</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Set to true to use a global heartbeat timer. Defaults to false.</description>
            <name>useHeartbeatTimer</name>
            <type>java.lang.Boolean</type>
        </attribute>
        <attribute>
            <description>The clockSync widget variable used to recalibrate after synchronization.</description>
            <name>clockSyncWidgetVar</name>
            <type>java.lang.String</type>
        </attribute>
    </tag>

    <tag>
        <description>Session keep alive component.</description>
        <tag-name>sessionKeepAlive</tag-name>
        <component>
            <component-type>ejsf.sessionKeepAliveComponent</component-type>
            <renderer-type>ejsf.sessionKeepAliveRenderer</renderer-type>
        </component>
        <attribute>
            <description>Period in seconds before session expiry that we send a ping. Defaults to 30.</description>
            <name>pingPeriodBeforeExpiry</name>
            <type>java.lang.Integer</type>
        </attribute>
        <attribute>
            <description>The maximum period to keep the session alive in minutes. Indefinitely if not defined.</description>
            <name>maxKeepAlivePeriod</name>
            <type>java.lang.Integer</type>
        </attribute>
    </tag>

    <tag>
        <description>Announcement component.</description>
        <tag-name>announcement</tag-name>
        <component>
            <component-type>ejsf.announcementComponent</component-type>
            <renderer-type>ejsf.announcementRenderer</renderer-type>
        </component>
        <attribute>
            <description>The name of the announcement cookie. Defaults to 'announcement'.</description>
            <name>name</name>
            <type>java.lang.Integer</type>
        </attribute>
        <attribute>
            <description>The version of the announcement.</description>
            <name>version</name>
            <type>java.lang.Integer</type>
        </attribute>
    </tag>

    <tag>
        <description>Action to accept the announcement.</description>
        <tag-name>acceptAnnouncement</tag-name>
        <handler-class>be.e_contract.ejsf.component.announcement.AcceptAnnouncementTagHandler</handler-class>
        <attribute>
            <description>The retention period in seconds for the announcement cookie.</description>
            <name>retention</name>
            <required>true</required>
            <type>java.lang.Integer</type>
        </attribute>
    </tag>

    <tag>
        <description>Mermaid component.</description>
        <tag-name>mermaid</tag-name>
        <component>
            <component-type>ejsf.mermaidComponent</component-type>
            <renderer-type>ejsf.mermaidRenderer</renderer-type>
        </component>
        <attribute>
            <description>The Mermaid diagram.</description>
            <name>value</name>
            <required>true</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>The PrimeFaces widget client-side variable.</description>
            <name>widgetVar</name>
            <type>java.lang.String</type>
        </attribute>
    </tag>

    <tag>
        <description>UIData component for announcement versions to be announced.</description>
        <tag-name>announcementVersions</tag-name>
        <component>
            <component-type>ejsf.announcementVersionsComponent</component-type>
            <renderer-type>ejsf.announcementVersionsRenderer</renderer-type>
        </component>
        <attribute>
            <description>The EL variable containing the version.</description>
            <name>var</name>
            <required>true</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>The optional oldest version for which there is still an announcement.</description>
            <name>oldestVersion</name>
            <type>java.lang.Integer</type>
        </attribute>
        <attribute>
            <description>The order in which to iterate the versions. Possible values: 'asc' or 'desc'. Defaults to 'asc'.</description>
            <name>order</name>
            <type>java.lang.String</type>
        </attribute>
    </tag>

    <tag>
        <description>Server Script component.</description>
        <tag-name>serverScript</tag-name>
        <component>
            <component-type>ejsf.serverScriptComponent</component-type>
        </component>
        <attribute>
            <description>The script language.</description>
            <name>language</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>The scope of the script. request or view. Defaults to request.</description>
            <name>scope</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Binds EL values to the script.</description>
            <name>bind</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Include a script as resource.</description>
            <name>include</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Marks the script functions.</description>
            <name>functions</name>
            <type>java.lang.String</type>
        </attribute>
    </tag>

    <tag>
        <description>
            Leading/trailing white spaces validator.
        </description>
        <tag-name>trimValidator</tag-name>
        <validator>
            <validator-id>ejsf.trimValidator</validator-id>
        </validator>
        <attribute>
            <description>The optional validation error message.</description>
            <name>message</name>
            <type>java.lang.String</type>
        </attribute>
    </tag>

    <tag>
        <description>String trimming converter.</description>
        <tag-name>trimConverter</tag-name>
        <converter>
            <converter-id>ejsf.trimConverter</converter-id>
        </converter>
    </tag>

    <tag>
        <description>WebAuthn Registration action.</description>
        <tag-name>webAuthnRegister</tag-name>
        <handler-class>be.e_contract.ejsf.component.webauthn.WebAuthnRegisterTagHandler</handler-class>
        <attribute>
            <description>The optional webAuthn component.</description>
            <name>for</name>
            <type>java.lang.String</type>
        </attribute>
    </tag>

    <tag>
        <description>The WebAuthn component.</description>
        <tag-name>webAuthn</tag-name>
        <component>
            <component-type>ejsf.webAuthnComponent</component-type>
            <renderer-type>ejsf.webAuthnRenderer</renderer-type>
        </component>
        <attribute>
            <description>The CredentialRepository.</description>
            <name>credentialRepository</name>
            <required>true</required>
            <type>com.yubico.webauthn.CredentialRepository</type>
        </attribute>
        <attribute>
            <description>The relying party identifier.</description>
            <name>relyingPartyId</name>
            <required>true</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>The relying party name.</description>
            <name>relyingPartyName</name>
            <required>true</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>The username.</description>
            <name>username</name>
            <required>true</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Allow any origin port.</description>
            <name>allowOriginPort</name>
            <type>java.lang.Boolean</type>
        </attribute>
    </tag>

    <tag>
        <description>WebAuthn Authenticate action.</description>
        <tag-name>webAuthnAuthenticate</tag-name>
        <handler-class>be.e_contract.ejsf.component.webauthn.WebAuthnAuthenticateTagHandler</handler-class>
        <attribute>
            <description>The optional webAuthn component.</description>
            <name>for</name>
            <type>java.lang.String</type>
        </attribute>
    </tag>

    <tag>
        <description>
            WebAuthn Username Validator.
        </description>
        <tag-name>webAuthnUsernameValidator</tag-name>
        <validator>
            <validator-id>ejsf.webAuthnUsernameValidator</validator-id>
            <handler-class>be.e_contract.ejsf.component.webauthn.WebAuthnUsernameValidatorTagHandler</handler-class>
        </validator>
        <attribute>
            <description>Validation mode. "registration" or "authentication"</description>
            <name>mode</name>
            <required>true</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>The CredentialRepository.</description>
            <name>credentialRepository</name>
            <required>true</required>
            <type>com.yubico.webauthn.CredentialRepository</type>
        </attribute>
        <attribute>
            <description>The optional validation error message.</description>
            <name>message</name>
            <type>java.lang.String</type>
        </attribute>
    </tag>

    <tag>
        <description>WebAuthn registration AJAX behavior.</description>
        <tag-name>webAuthnRegistration</tag-name>
        <handler-class>be.e_contract.ejsf.component.webauthn.WebAuthnRegistrationTagHandler</handler-class>
        <attribute>
            <description>Components to update.</description>
            <name>update</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Method to invoke after registration.</description>
            <name>listener</name>
            <required>true</required>
            <method-signature>void listener(be.e_contract.ejsf.component.webauthn.WebAuthnRegisteredEvent)</method-signature>
        </attribute>
        <attribute>
            <description>The optional userId as byte[]. If none is provided, a userId gets generated.</description>
            <name>userId</name>
            <type>byte[]</type>
        </attribute>
        <attribute>
            <description>The optional user display name. If none is provided, we use the username instead.</description>
            <name>userDisplayName</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>User verification requirements. "required", "preferred", or "discouraged".</description>
            <name>userVerification</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>The WebAuthn timeout in milliseconds.</description>
            <name>timeout</name>
            <type>java.lang.Long</type>
        </attribute>
        <attribute>
            <description>Authenticator attachment. "platform" or "cross-platform".</description>
            <name>authenticatorAttachment</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Resident key requirements. "required", "preferred", or "discouraged".</description>
            <name>residentKey</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>The Attestation Trust Store.</description>
            <name>attestationTrustSource</name>
            <type>com.yubico.webauthn.attestation.AttestationTrustSource</type>
        </attribute>
        <attribute>
            <description>The Attestation Conveyance Preference. "none", "indirect", "direct", or "enterprise".</description>
            <name>attestationConveyance</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Allow for untrusted attestations. Defaults to true.</description>
            <name>allowUntrustedAttestation</name>
            <type>java.lang.Boolean</type>
        </attribute>
        <attribute>
            <description>Method to invoke upon registration error.</description>
            <name>errorListener</name>
            <method-signature>void errorListener(be.e_contract.ejsf.component.webauthn.WebAuthnRegistrationError)</method-signature>
        </attribute>
        <attribute>
            <description>Registration message interceptor.</description>
            <name>messageInterceptor</name>
            <method-signature>java.lang.String messageInterceptor(java.lang.String,java.lang.String)</method-signature>
        </attribute>
    </tag>

    <tag>
        <description>WebAuthn authentication AJAX behavior.</description>
        <tag-name>webAuthnAuthentication</tag-name>
        <handler-class>be.e_contract.ejsf.component.webauthn.WebAuthnAuthenticationTagHandler</handler-class>
        <attribute>
            <description>Components to update.</description>
            <name>update</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Method to invoke after authentication.</description>
            <name>listener</name>
            <required>true</required>
            <method-signature>void listener(be.e_contract.ejsf.component.webauthn.WebAuthnAuthenticatedEvent)</method-signature>
        </attribute>
        <attribute>
            <description>User verification requirements. "required", "preferred", or "discouraged".</description>
            <name>userVerification</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>The WebAuthn timeout in milliseconds.</description>
            <name>timeout</name>
            <type>java.lang.Long</type>
        </attribute>
        <attribute>
            <description>Method to invoke for PRF functionality.</description>
            <name>prfListener</name>
            <method-signature>com.yubico.webauthn.data.ByteArray prfListener(com.yubico.webauthn.data.ByteArray)</method-signature>
        </attribute>
        <attribute>
            <description>Method to invoke upon authentication error.</description>
            <name>errorListener</name>
            <method-signature>void errorListener(be.e_contract.ejsf.component.webauthn.WebAuthnAuthenticationError)</method-signature>
        </attribute>
        <attribute>
            <description>Authentication message interceptor.</description>
            <name>messageInterceptor</name>
            <method-signature>java.lang.String messageInterceptor(java.lang.String,java.lang.String)</method-signature>
        </attribute>
    </tag>

    <tag>
        <description>Outputs a LocalDateTime as last reviewed.</description>
        <tag-name>lastReviewed</tag-name>
        <component>
            <component-type>ejsf.lastReviewed</component-type>
        </component>
        <attribute>
            <description>The last review LocalDateTime value.</description>
            <name>value</name>
            <required>true</required>
            <type>java.time.LocalDateTime</type>
        </attribute>
        <attribute>
            <description>The message to display in case of a missing last reviewed value. Defaults to "Unknown".</description>
            <name>unknownMessage</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>The DateTimeFormatter pattern to use for formatting the value. Defaults to "dd/MM/yyyy HH:mm".</description>
            <name>pattern</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>The maximum age period after which to mark the last review LocalDateTime value as warning. Defaults to "P3M".</description>
            <name>maxAgeWarning</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>The maximum age period after which to mark the last review LocalDateTime value as error. Defaults to "P6M".</description>
            <name>maxAgeError</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>The optional OK icon to show.</description>
            <name>okIcon</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>The optional warning icon to show.</description>
            <name>warningIcon</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>The optional error icon to show.</description>
            <name>errorIcon</name>
            <type>java.lang.String</type>
        </attribute>
    </tag>

    <tag>
        <description>Leaflet component.</description>
        <tag-name>leaflet</tag-name>
        <component>
            <component-type>ejsf.leafletComponent</component-type>
            <renderer-type>ejsf.leafletRenderer</renderer-type>
        </component>
        <attribute>
            <description>The initial latitude and longitude for the map.</description>
            <name>value</name>
            <required>true</required>
            <type>be.e_contract.ejsf.component.leaflet.LatLng</type>
        </attribute>
        <attribute>
            <description>The optional height of the map. Defaults to "200px".</description>
            <name>height</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>The optional width of the map.</description>
            <name>width</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>The PrimeFaces widget client-side variable.</description>
            <name>widgetVar</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Makes the zoom control present or not. Defaults to "true".</description>
            <name>zoomControl</name>
            <type>java.lang.Boolean</type>
        </attribute>
        <attribute>
            <description>Initial zoom level. Defaults to 13.</description>
            <name>zoom</name>
            <type>java.lang.Integer</type>
        </attribute>
        <attribute>
            <description>Minimum zoom level. Defaults to 1.</description>
            <name>minZoom</name>
            <type>java.lang.Integer</type>
        </attribute>
        <attribute>
            <description>Maximum zoom level. Defaults to 19.</description>
            <name>maxZoom</name>
            <type>java.lang.Integer</type>
        </attribute>
    </tag>

    <tag>
        <description>
            Makes all HTML elements embedding this component of the same height.
        </description>
        <tag-name>sameHeight</tag-name>
        <component>
            <component-type>ejsf.sameHeightComponent</component-type>
        </component>
        <attribute>
            <description>The group name of the elements that should have the same height. Defaults to "default".</description>
            <name>group</name>
            <type>java.lang.String</type>
        </attribute>
    </tag>

    <tag>
        <description>Insert a facet.</description>
        <tag-name>insertFacet</tag-name>
        <handler-class>be.e_contract.ejsf.component.insertfacet.InsertFacetTagHandler</handler-class>
        <attribute>
            <description>The name of the facet.</description>
            <name>name</name>
            <required>true</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>The optional name of the target facet.</description>
            <name>targetName</name>
            <type>java.lang.String</type>
        </attribute>
    </tag>

    <tag>
        <description>Only renders on a specified browser.</description>
        <tag-name>browser</tag-name>
        <component>
            <component-type>ejsf.browserComponent</component-type>
        </component>
        <attribute>
            <description>The name of the browser: chrome, edge, firefox, safari</description>
            <name>name</name>
            <required>true</required>
            <type>java.lang.String</type>
        </attribute>
    </tag>

    <tag>
        <description>Renders for a specific platform.</description>
        <tag-name>platforms</tag-name>
        <component>
            <component-type>ejsf.platformsComponent</component-type>
        </component>
    </tag>

    <tag>
        <description>A platform to render or not.</description>
        <tag-name>platform</tag-name>
        <component>
            <component-type>ejsf.platformComponent</component-type>
        </component>
        <attribute>
            <description>The name of the platform: linux, macos, freebsd, or windows</description>
            <name>name</name>
            <required>true</required>
            <type>java.lang.String</type>
        </attribute>
    </tag>

    <tag>
        <description>Makes a component go fullscreen.</description>
        <tag-name>fullscreen</tag-name>
        <behavior>
            <behavior-id>ejsf.fullscreenClientBehavior</behavior-id>
            <handler-class>be.e_contract.ejsf.behavior.fullscreen.FullscreenTagHandler</handler-class>
        </behavior>
        <attribute>
            <description>The component id to render fullscreen.</description>
            <name>component</name>
            <required>true</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Client side callback to execute when fullscreen transition is completed.</description>
            <name>onfullscreen</name>
            <type>java.lang.String</type>
        </attribute>
    </tag>

    <tag>
        <description>Prevents this page from being indexed by search engines.</description>
        <tag-name>robots</tag-name>
        <component>
            <component-type>ejsf.robotsComponent</component-type>
        </component>
        <attribute>
            <description>Sets follow instead of nofollow.</description>
            <name>follow</name>
            <type>java.lang.Boolean</type>
        </attribute>
        <attribute>
            <description>Sets index instead of noindex.</description>
            <name>index</name>
            <type>java.lang.Boolean</type>
        </attribute>
    </tag>

    <tag>
        <description>Input component for dynamically typed inputs. Via facets you can define the actual input component for each type.</description>
        <tag-name>input</tag-name>
        <component>
            <component-type>ejsf.inputComponent</component-type>
        </component>
        <attribute>
            <description>The value.</description>
            <name>value</name>
            <required>true</required>
            <type>java.lang.Object</type>
        </attribute>
        <attribute>
            <description>The type for the input.</description>
            <name>type</name>
            <required>true</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>The default type.</description>
            <name>defaultType</name>
            <type>java.lang.String</type>
        </attribute>
    </tag>

    <tag>
        <description>Component for native HTML dialogs.</description>
        <tag-name>dialog</tag-name>
        <component>
            <component-type>ejsf.dialogComponent</component-type>
            <renderer-type>ejsf.dialogRenderer</renderer-type>
        </component>
        <attribute>
            <description>The PrimeFaces widget client-side variable.</description>
            <name>widgetVar</name>
            <type>java.lang.String</type>
        </attribute>
    </tag>

    <tag>
        <description>
            Expression language validator.
        </description>
        <tag-name>elValidator</tag-name>
        <validator>
            <validator-id>ejsf.elValidator</validator-id>
            <handler-class>be.e_contract.ejsf.validator.el.ELValidatorTagHandler</handler-class>
        </validator>
        <attribute>
            <description>The variable name for the value.</description>
            <name>valueVar</name>
            <required>true</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>The EL expression to evaluate.</description>
            <name>invalidWhen</name>
            <required>true</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>The invalid value message. Can also be an EL expression.</description>
            <name>message</name>
            <required>true</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>The variable name for the value of the previous row.</description>
            <name>prevRowVar</name>
            <type>java.lang.String</type>
        </attribute>
    </tag>

    <tag>
        <description>Component for asynchronous value loading.</description>
        <tag-name>async</tag-name>
        <component>
            <component-type>ejsf.asyncComponent</component-type>
            <renderer-type>ejsf.asyncRenderer</renderer-type>
            <handler-class>be.e_contract.ejsf.component.async.AsyncTagHandler</handler-class>
        </component>
        <attribute>
            <description>The value to be loading asynchronously.</description>
            <name>value</name>
            <required>true</required>
            <type>java.lang.Object</type>
        </attribute>
        <attribute>
            <description>The optional id of the output component</description>
            <name>for</name>
            <type>java.lang.String</type>
        </attribute>
    </tag>

    <tag>
        <description>Component to access web browser storage. This component requires JSF version 2.3.</description>
        <tag-name>storageGetItems</tag-name>
        <component>
            <component-type>ejsf.storageGetItemsComponent</component-type>
            <renderer-type>ejsf.storageGetItemsRenderer</renderer-type>
        </component>
        <attribute>
            <description>The components to update.</description>
            <name>update</name>
            <type>java.lang.String</type>
        </attribute>
    </tag>

    <tag>
        <description>Tag to indicate which storage item to retrieve.</description>
        <tag-name>storageGetItem</tag-name>
        <handler-class>be.e_contract.ejsf.component.storage.StorageGetItemTagHandler</handler-class>
        <attribute>
            <description>The name of the storage item.</description>
            <name>name</name>
            <required>true</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>The type of the storage item. 'local' or 'session'. Defaults to 'local'.</description>
            <name>type</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>The EL for setting the storage item value.</description>
            <name>value</name>
            <required>true</required>
            <type>java.lang.String</type>
        </attribute>
    </tag>

    <tag>
        <description>Sets the item within the web browser storage.</description>
        <tag-name>storageSetItem</tag-name>
        <handler-class>be.e_contract.ejsf.component.storage.StorageSetItemTagHandler</handler-class>
        <attribute>
            <description>The name of the storage item.</description>
            <name>name</name>
            <required>true</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>The type of the storage item. 'local' or 'session'. Defaults to 'local'.</description>
            <name>type</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>The storage item value.</description>
            <name>value</name>
            <required>true</required>
            <type>java.lang.String</type>
        </attribute>
    </tag>

    <tag>
        <description>Removes the item within the web browser storage.</description>
        <tag-name>storageRemoveItem</tag-name>
        <handler-class>be.e_contract.ejsf.component.storage.StorageRemoveItemTagHandler</handler-class>
        <attribute>
            <description>The name of the storage item.</description>
            <name>name</name>
            <required>true</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>The type of the storage item. 'local' or 'session'. Defaults to 'local'.</description>
            <name>type</name>
            <type>java.lang.String</type>
        </attribute>
    </tag>

    <tag>
        <description>Clears the web browser storage.</description>
        <tag-name>storageClear</tag-name>
        <handler-class>be.e_contract.ejsf.component.storage.StorageClearTagHandler</handler-class>
        <attribute>
            <description>The type of the storage item. 'local' or 'session'. Defaults to 'local'.</description>
            <name>type</name>
            <type>java.lang.String</type>
        </attribute>
    </tag>

    <tag>
        <description>Battery output component.</description>
        <tag-name>battery</tag-name>
        <component>
            <component-type>ejsf.batteryComponent</component-type>
            <renderer-type>ejsf.batteryRenderer</renderer-type>
        </component>
        <attribute>
            <description>The battery level value. Value ranges from 0 to 100.</description>
            <name>value</name>
            <required>true</required>
            <type>java.lang.Number</type>
        </attribute>
        <attribute>
            <description>The height of the battery.</description>
            <name>height</name>
            <required>true</required>
            <type>java.lang.Integer</type>
        </attribute>
        <attribute>
            <description>The width of the battery.</description>
            <name>width</name>
            <required>true</required>
            <type>java.lang.Integer</type>
        </attribute>
    </tag>

    <tag>
        <description>Performance navigation component.</description>
        <tag-name>performanceNavigation</tag-name>
        <component>
            <component-type>ejsf.performanceNavigationComponent</component-type>
            <renderer-type>ejsf.performanceNavigationRenderer</renderer-type>
        </component>
    </tag>

    <tag>
        <description>Lazy loading image carousel.</description>
        <tag-name>carousel</tag-name>
        <component>
            <component-type>ejsf.carouselComponent</component-type>
            <renderer-type>ejsf.carouselRenderer</renderer-type>
        </component>
        <attribute>
            <description>The list of CarouselImage.</description>
            <name>value</name>
            <required>true</required>
            <type>java.util.List</type>
        </attribute>
        <attribute>
            <description>The width style.</description>
            <name>width</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>The height style in pixels.</description>
            <name>height</name>
            <required>true</required>
            <type>java.lang.Integer</type>
        </attribute>
        <attribute>
            <description>The auto play delay in ms.</description>
            <name>autoPlay</name>
            <type>java.lang.Integer</type>
        </attribute>
        <attribute>
            <description>Lazy loads even the first image. Defaults to false.</description>
            <name>lazyFirst</name>
            <type>java.lang.Boolean</type>
        </attribute>
    </tag>

    <tag>
        <description>Action to add a message.</description>
        <tag-name>addMessage</tag-name>
        <handler-class>be.e_contract.ejsf.component.message.AddMessageTagHandler</handler-class>
        <attribute>
            <description>The severity. Defaults to "INFO".</description>
            <name>severity</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>The message summary.</description>
            <name>summary</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>The message detail.</description>
            <name>detail</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>The target component.</description>
            <name>target</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Only add message when a callback parameter has been set.</description>
            <name>whenCallbackParam</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Only add message when a callback parameter value has been set.</description>
            <name>whenCallbackParamValue</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Callback parameter value variable that can be used during evaluation of the message summary and detail.</description>
            <name>callbackParamVar</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Set to true to invalidate the target UIInput component when the condition is met.</description>
            <name>invalidateTarget</name>
            <type>java.lang.Boolean</type>
        </attribute>
    </tag>

    <tag>
        <description>Parameter for addMessage summary or detail messages.</description>
        <tag-name>addMessageParam</tag-name>
        <handler-class>be.e_contract.ejsf.component.message.AddMessageParamTagHandler</handler-class>
        <attribute>
            <description>The parameter value.</description>
            <name>value</name>
            <required>true</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>The target message. summary or detail. Defaults to summary.</description>
            <name>for</name>
            <type>java.lang.String</type>
        </attribute>
    </tag>

    <tag>
        <description>Adds a link element to the head.</description>
        <tag-name>link</tag-name>
        <component>
            <component-type>ejsf.linkComponent</component-type>
            <handler-class>be.e_contract.ejsf.component.link.LinkComponentHandler</handler-class>
        </component>
        <attribute>
            <description>The link href attribute.</description>
            <name>href</name>
            <required>true</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>The link rel attribute.</description>
            <name>rel</name>·
            <type>java.lang.String</type>
        </attribute>
    </tag>

    <tag>
        <description>Component to add JSON-LD to the head.</description>
        <tag-name>linkedData</tag-name>
        <component>
            <component-type>ejsf.linkedDataComponent</component-type>
        </component>
        <attribute>
            <description>The JSON-LD value. If not provided, we use the children as value.</description>
            <name>value</name>
            <type>java.lang.String</type>
        </attribute>
    </tag>

    <tag>
        <description>Component to add KaTeX support to a page.</description>
        <tag-name>katex</tag-name>
        <component>
            <component-type>ejsf.katexComponent</component-type>
        </component>
    </tag>

    <tag>
        <description>Output value as markdown.</description>
        <tag-name>marked</tag-name>
        <component>
            <component-type>ejsf.markedComponent</component-type>
            <renderer-type>ejsf.markedRenderer</renderer-type>
        </component>
        <attribute>
            <description>The markdown to display.</description>
            <name>value</name>
            <required>true</required>
            <type>java.lang.String</type>
        </attribute>
    </tag>

    <tag>
        <description>Copy the value to the clipboard.</description>
        <tag-name>copyButton</tag-name>
        <component>
            <component-type>ejsf.copyButtonComponent</component-type>
            <renderer-type>ejsf.copyButtonRenderer</renderer-type>
        </component>
        <attribute>
            <description>The value to be copied to the clipboard.</description>
            <name>value</name>
            <required>true</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>The optional style for the icon.</description>
            <name>style</name>
            <type>java.lang.String</type>
        </attribute>
    </tag>

</facelet-taglib>
